model:
  base_learning_rate: 1.0e-06
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.0015
    linear_end: 0.0205
    log_every_t: 100
    timesteps: 1000
    loss_type: l1
    first_stage_key: image
    cond_stage_key: segmentation
    image_size: 128 #32
    channels: 4
    concat_mode: true
    cond_stage_trainable: true

    
    
    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 128 #32
        in_channels: 8 #4
        out_channels: 4 #3#4
        model_channels: 128
        attention_resolutions:
        - 32
        - 16
        - 8
        num_res_blocks: 2
        channel_mult:
        - 1
        - 4
        - 8
        num_heads: 8 # 32 #originally 32
        #use_spatial_transformer: true
        #transformer_depth: 1
        #context_dim: 512

    first_stage_config:
      target: ldm.models.autoencoder.VQModelInterface
      params:
        embed_dim: 4 #3
        n_embed: 16384 #8192
        ckpt_path: /ocean/projects/mat240020p/nli1/diffusion/VQGAN/vq-f8.ckpt  #YOUR VQF4
        ddconfig:
          double_z: false
          z_channels: 4 #3
          resolution: 256 #256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 2
          - 4
          #- 4 #added
          num_res_blocks: 2
          attn_resolutions: 
          - 32 #[]
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.SpatialRescaler
      params:
        n_stages: 3 #2
        in_channels: 3 #4
        out_channels: 4 #3

data:
  target: main.DataModuleFromConfig
  params:
    batch_size:  2 #16 #8
    num_workers: 5
    wrap: False
    train:
      target: ldm.data.kvasir.KvasirSegTrain
      params:
        size: 512 #256
    validation:
      target: ldm.data.kvasir.KvasirSegEval
      params:
        size: 512 #256

lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 5000
        max_images: 4
        increase_log_steps: False


  trainer:
    benchmark: True
